name: test-run

on:
  workflow_dispatch:
    inputs:
      action: # deploy or remove
        description: 'To deploy or remove app'
        required: true
        type: choice
        default: deploy
        options:
        - deploy
        - remove
      repo:
        description: 'Serverless Repo to deploy/remove (under cloud-one-network)'
        required: true
        type: string
      ref:
        description: 'Serverless Repo tag to deploy/remove'
        required: true
        type: string
      python-version:
        description: 'Python version for repo ref without .python-version file'
        required: false
        type: string
        default: ''
      deployment-ring:
        description: 'Deploy to specific production region(s). Ring1 for US and AU. Ring2 for EU, IN, SG and MEA. Ring3 for JP.'
        required: true
        type: choice
        options:
        - ring1
        - ring2
        - ring3
      deployment-ring1-region:
        description: 'Deploy to specific production region(s) in ring1. Possible options: us,au,all'
        required: false
        type: choice
        default: all
        options:
        - all
        - us
        - au
      deployment-ring2-region:
        description: 'Deploy to specific production region(s) in ring2. Possible options: sg,in,eu,mae,all'
        required: false
        type: choice
        default: all
        options:
        - all
        - sg
        - in
        - eu
        - mae
      deployment-ring3-region:
        description: 'Deploy to specific production region(s) in ring3. Possible options: jp,all'
        required: false
        type: choice
        default: all
        options:
        - all
        - jp
        

env:
  INPUT_ACTION: ${{ github.event.inputs.action }}
  INPUT_REPO: ${{ github.event.inputs.repo }}
  INPUT_REF: ${{ github.event.inputs.ref }}
  INPUT_DEPLOYMENT_RING: ${{ github.event.inputs.deployment-ring }}
  INPUT_DEPLOYMENT_RING1_REGION: ${{ github.event.inputs.deployment-ring1-region }}
  INPUT_DEPLOYMENT_RING2_REGION: ${{ github.event.inputs.deployment-ring2-region }}
  INPUT_DEPLOYMENT_RING3_REGION: ${{ github.event.inputs.deployment-ring3-region }}
  INPUT_PYTHON_VERSION: ${{ github.event.inputs.python-version }}
  ARTIFACT_LOC: s3://n1-ptp-artifacts/${{ github.event.inputs.repo }}/${{ github.event.inputs.ref }}
  N1_TICKET: ${{ github.event.inputs.ref }}

run-name: ${{ github.event.inputs.repo }} ${{ github.event.inputs.ref }}

permissions:
  actions: read # Get job info for workflow run
  contents: read  # Checkout repo
  id-token: write # Required for OIDC auth with AWS

jobs:
  ring1-setup:
    if: ${{ github.event.inputs.deployment-ring == 'ring1' }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.ring1.outputs.matrix }}
    steps:
      - name: ring1-matrix-config
        id: ring1
        run: |
              if [ "${{ env.INPUT_DEPLOYMENT_RING1_REGION }}" == "us" ]; then
                echo "hello us"
                echo "matrix={\"include\":[{\"region\":\"us-east-1\",\"sessionname\":\"GithubActionsDeploySlsToProdUsFromCdPipeline\"}]}" >> $GITHUB_OUTPUT
              fi
              if [ "${{ env.INPUT_DEPLOYMENT_RING1_REGION }}" == "au" ]; then
                echo "hello au"
                echo "matrix={\"include\":[{\"region\":\"ap-southeast-2\",\"sessionname\":\"GithubActionsDeploySlsToProdAuFromCdPipeline\"}]}" >> $GITHUB_OUTPUT
              fi
              if [ "${{ env.INPUT_DEPLOYMENT_RING1_REGION }}" == "all" ]; then
                echo "hello all"
                echo "matrix={\"include\":[{\"region\":\"us-east-1\",\"sessionname\":\"GithubActionsDeploySlsToProdUsFromCdPipeline\"}, {\"region\":\"ap-southeast-2\",\"sessionname\": \"GithubActionsDeploySlsToProdAuFromCdPipeline\"}]}" >> $GITHUB_OUTPUT
              fi

  production-ring1:
   if: ${{ github.event.inputs.deployment-ring == 'ring1' }}
   needs: [ring1-setup]
   runs-on: ubuntu-latest
   name: production-ring1
   strategy:
     fail-fast: false
     matrix: ${{ fromJSON(needs.ring1-setup.outputs.matrix) }}
   steps:
     - name: Run tests
       run: |
          echo ${{ matrix.region }}
          echo ${{ matrix.sessionname }}

  ring2-setup:
    if: ${{ github.event.inputs.deployment-ring == 'ring2' }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.ring2.outputs.matrix }}
    steps:
      - name: ring2-matrix-config
        id: ring2
        run: |
              if [ "${{ env.INPUT_DEPLOYMENT_RING2_REGION }}" == "in" ]; then
                echo "hello us"
                echo "matrix={\"include\":[{\"region\":\"ap-south-1\",\"sessionname\":\"GithubActionsDeploySlsToProdInFromCdPipeline\"}]}" >> $GITHUB_OUTPUT
              fi
              if [ "${{ env.INPUT_DEPLOYMENT_RING2_REGION }}" == "eu" ]; then
                echo "hello au"
                echo "matrix={\"include\":[{\"region\":\"eu-central-1\",\"sessionname\":\"GithubActionsDeploySlsToProdEuFromCdPipeline\"}]}" >> $GITHUB_OUTPUT
              fi
              if [ "${{ env.INPUT_DEPLOYMENT_RING2_REGION }}" == "sg" ]; then
                echo "hello au"
                echo "matrix={\"include\":[{\"region\":\"ap-southeast-1\",\"sessionname\":\"GithubActionsDeploySlsToProdSgFromCdPipeline\"}]}" >> $GITHUB_OUTPUT
              fi
              if [ "${{ env.INPUT_DEPLOYMENT_RING2_REGION }}" == "mae" ]; then
                echo "hello au"
                echo "matrix={\"include\":[{\"region\":\"me-central-1\",\"sessionname\":\"GithubActionsDeploySlsToProdMeFromCdPipeline\"}]}" >> $GITHUB_OUTPUT
              fi
              if [ "${{ env.INPUT_DEPLOYMENT_RING2_REGION }}" == "all" ]; then
                echo "hello all"
                echo "matrix={\"include\":[{\"region\":\"ap-south-1\",\"sessionname\":\"GithubActionsDeploySlsToProdInFromCdPipeline\"}, {\"region\":\"eu-central-1\",\"sessionname\": \"GithubActionsDeploySlsToProdEuFromCdPipeline\"}, {\"region\":\"ap-southeast-1\",\"sessionname\": \"GithubActionsDeploySlsToProdSgFromCdPipeline\"},{\"region\":\"me-central-1\",\"sessionname\": \"GithubActionsDeploySlsToProdMeFromCdPipeline\"}]}" >> $GITHUB_OUTPUT
              fi
  production-ring2:
   if: ${{ github.event.inputs.deployment-ring == 'ring2' }}
   needs: [ring2-setup]
   runs-on: ubuntu-latest
   name: production-ring2
   strategy:
     fail-fast: false
     matrix: ${{ fromJSON(needs.ring2-setup.outputs.matrix) }}
   steps:
     - name: Run tests
       run: |
          echo ${{ matrix.region }}
          echo ${{ matrix.sessionname }}

  ring3-setup:
    if: ${{ github.event.inputs.deployment-ring == 'ring3' }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.ring3.outputs.matrix }}
    steps:
      - name: ring3-matrix-config
        id: ring3
        run: |
              if [ "${{ env.INPUT_DEPLOYMENT_RING1_REGION }}" == "jp" ]; then
                echo "hello us"
                echo "matrix={\"include\":[{\"region\":\"ap-northeast-1\",\"sessionname\":\"GithubActionsDeploySlsToProdJpFromCdPipeline\"}]}" >> $GITHUB_OUTPUT
              fi
              if [ "${{ env.INPUT_DEPLOYMENT_RING1_REGION }}" == "all" ]; then
                echo "hello us"
                echo "matrix={\"include\":[{\"region\":\"ap-northeast-1\",\"sessionname\":\"GithubActionsDeploySlsToProdJpFromCdPipeline\"}]}" >> $GITHUB_OUTPUT
              fi
  
  production-ring3:
   if: ${{ github.event.inputs.deployment-ring == 'ring3' }}
   needs: [ring3-setup]
   runs-on: ubuntu-latest
   name: production-ring3
   strategy:
     fail-fast: false
     matrix: ${{ fromJSON(needs.ring3-setup.outputs.matrix) }}
   steps:
     - name: Run tests
       run: |
          echo ${{ matrix.region }}
          echo ${{ matrix.sessionname }}
